# Supervisord
[supervisord]
user     = root
nodaemon = true

[unix_http_server]
file=/var/run/supervisor.sock
chmod=0700

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock

[program:bootstrap]
priority = 1
command  = python /opt/app/bin/bootstrap.py

# Logging
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
stderr_logfile=/dev/fd/2
stderr_logfile_maxbytes=0

# Lifecycle: do not restart bootstrap if it exits, as it will run only once
autorestart = false
startsecs = 0
startretries = 0

[program:api]
autostart = false
priority  = 3
command   = /opt/app/bin/start.sh api

# Logging
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
stderr_logfile=/dev/fd/2
stderr_logfile_maxbytes=0

# Lifecycle: do not restart api if it exits
autorestart = false

[program:agent]
autostart = false
priority  = 4
command   = /opt/app/bin/start.sh agent

# Logging
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
stderr_logfile=/dev/fd/2
stderr_logfile_maxbytes=0

# Lifecycle: restart agent on unexpected errors, do not wait to transit to STARTED state
autorestart  = unexpected
exitcodes    = 0
startsecs    = 0
startretries = 3

[program:web]
autostart = false
priority  = 5
command   = /opt/app/bin/start.sh web

# Logging
stdout_logfile=/dev/fd/1
stdout_logfile_maxbytes=0
stderr_logfile=/dev/fd/2
stderr_logfile_maxbytes=0

# Lifecycle: do not restart web if it exits
autorestart = false
